#!/bin/bash
set -x
set -e

apt-get update
apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    nginx \
    git \
    gcc \
    g++ \
    libpcap-dev

systemctl stop nginx.service

### Install goreplay from sources because "vxlan" feature
### available only in master branch
###
curl -L https://go.dev/dl/go1.18.3.linux-amd64.tar.gz | tar -C /usr/local -xz
export PATH=$PATH:/usr/local/go/bin
mkdir -p /root/goreplay
git clone https://github.com/buger/goreplay.git /root/goreplay

cd /root/goreplay
export GOPATH=/root/go
export GOCACHE=/root/.cache/go-build
export GOMODCACHE=/root/go/pkg/mod
export GOARCH=amd64
mkdir -p $GOMODCACHE $GOCACHE
go get -v ... || true
go build
chmod 700 ./goreplay
chown root:root ./goreplay
mv ./goreplay /usr/local/bin/goreplay
cd -

# Configure goreplay
cat <<EOF > /etc/systemd/system/goreplay.service
[Unit]
After=network.target

[Service]

ExecStart=/usr/local/bin/goreplay \\
    --input-raw :1 \\
    --input-raw-bpf-filter "udp port 0" \\
    --input-raw-engine vxlan \\
    --input-raw-vxlan-port ${vxlan_port} \\
    --input-raw-vxlan-vni ${vxlan_id} \\
    --http-original-host \\
    --input-raw-expire ${buffer_packet_expire} \\
    --input-raw-protocol http \\
    --input-raw-buffer-size ${buffer_size} \\
    --output-http "${mirror_endpoint}" \\
    %{ if debug }--output-stdout%{ endif }
KillMode=process
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload

# Start goreplay
systemctl start goreplay.service
systemctl enable goreplay.service

# Check goreplay
sleep 15
systemctl is-active --quiet goreplay.service || exit 1

# Start healthcheck service
cat <<EOF > /etc/nginx/sites-available/default
server {
    listen 0.0.0.0:9445 default_server;
    listen [::]:9445 default_server;
    server_name _;
    root /var/www/html;
    keepalive_timeout 0;
    gzip off;
    access_log off;
    location /-/healthcheck {
        return 200 'OK';
    }
    location /-/ping {
        return 200 'PONG';
    }
    location / {
        return 405 '';
    }
}
EOF
systemctl start nginx.service

set +e
